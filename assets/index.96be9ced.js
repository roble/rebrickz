var Z=Object.defineProperty,Q=Object.defineProperties;var J=Object.getOwnPropertyDescriptors;var j=Object.getOwnPropertySymbols;var tt=Object.prototype.hasOwnProperty,et=Object.prototype.propertyIsEnumerable;var F=(e,t,s)=>t in e?Z(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,c=(e,t)=>{for(var s in t||(t={}))tt.call(t,s)&&F(e,s,t[s]);if(j)for(var s of j(t))et.call(t,s)&&F(e,s,t[s]);return e},d=(e,t)=>Q(e,J(t));import{P as S}from"./phaser.88bac156.js";const st=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function s(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerpolicy&&(n.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?n.credentials="include":r.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=s(r);fetch(r.href,n)}};st();const k=380,z=600,L=8,N=6,R=z/(L+4),it=L*R+R,O=N*R,X=18,a={rows:L,cols:N,width:k,height:z,marginTop:-30,trajectoryDistance:1e6,lives:5,gameSpeed:1,ball:{size:X,radius:X/2,speed:500,max:48,startBalls:3,delayBetweenBalls:100,criticalRate:.5,criticalHealthPercentage:.4,instantKillRate:.15,tweens:{move:{delay:{min:0,max:300},ease:"Quart.easeOut",duration:200}}},brick:{size:R,levelIncrement:1.25,max:{normal:36,special:2,extra:2,life:10},dropProbability:{special:15,extra:50,life:10},dropOnRows:{normal:{min:1,max:2},special:{min:0,max:L-1},extra:{min:0,max:L-1},life:{min:0,max:L-1}},maxPerRow:N-2,text:{style:{font:"bold 12px Arial Black",align:"center",color:"#000000"}},initialPositionY:-50,initialScale:2,initialAlpha:0,initialDepth:0,defaultTexture:"block",tweens:{move:{delay:{min:0,max:300},ease:"Linear",duration:600},fall:{delay:{min:0,max:200},duration:500,ease:"Bounce"}}},world:{width:O,height:it,left:(k-O)/2,right:(k-O)/2,top:70,defaultTexture:"ground"}},rt={type:S.AUTO,parent:"game",backgroundColor:"#272b33",scale:{width:a.width,height:a.height,autoCenter:S.Scale.CENTER_BOTH,mode:S.Scale.FIT},physics:{default:"arcade",arcade:{debug:!1,debugShowBody:!0,debugShowStaticBody:!0,gravity:{x:0,y:0}}}};class at extends Phaser.Scene{constructor(){super({key:"Controller"})}create(){this.scene.launch("GameScene"),this.scene.setActive(!0,"GameScene"),this.scene.setVisible(!0,"GameScene"),this.currentScene=this.scene.get("GameScene")}update(){}}class nt extends S.Scene{constructor(){super("PreloadScene"),this.barHeight=20}preload(){this.load.baseURL="assets/",this.load.image("background","background.png"),this.load.image("ball","ball.png"),this.load.image("collision","collision.png"),this.load.image("arrow_ball","arrow_ball.png"),this.load.image("button_restart","button_restart.png"),this.load.image("gameover_screen","gameover_screen.png"),this.load.multiatlas("heart","heart.json"),this.load.multiatlas("life","life.json"),this.load.multiatlas("monster-green","monster-green.json"),this.load.multiatlas("special-brick","special-brick.json"),this.load.multiatlas("extra-ball","extra-ball.json"),this.load.multiatlas("particles","particles.json"),this.load.on("progress",this.handleOnProgress,this),this.load.on("complete",this.handleOnComplete,this),this.handleOnProgress(1)}init(){this.progressBox=this.add.graphics(),this.progressBar=this.add.graphics(),this.progressBox.fillStyle(2236962,.75),this.progressBox.fillRect(this.cameras.main.width*.1,this.cameras.main.worldView.y+this.cameras.main.height/2,this.cameras.main.width*.8,this.barHeight)}handleOnComplete(){this.time.addEvent({delay:500,callback:()=>this.scene.start("Controller")})}handleOnProgress(t){this.progressBar.clear(),this.progressBar.fillStyle(16777215,1),this.progressBar.fillRect(this.cameras.main.width*.1,this.cameras.main.worldView.y+this.cameras.main.height/2,this.cameras.main.width*.8*t,this.barHeight)}}class ot extends Phaser.Scene{constructor(){super({key:"GameOverScene",active:!1})}create(t){this.background=this.add.sprite(0,0,"gameover_screen"),this.background.setAlpha(0).setOrigin(0).setDepth(1),this.buttonRestart=this.add.sprite(a.width/2,a.height-100,"button_restart"),this.buttonRestart.setAlpha(0).setOrigin(.5).setDepth(2).setInteractive(),this.buttonRestart.on("pointerdown",()=>{console.log("RESTART"),this.tweens.add({targets:[this.background,this.buttonRestart],duration:300,ease:"Cubic.easeInOut",alpha:{from:1,to:0},onComplete:()=>{console.log("GO TO MAIN SCENE"),this.scene.start("GameScene")}})}),this.tweens.add({targets:[this.background,this.buttonRestart],duration:500,ease:"Cubic.easeInOut",alpha:{from:0,to:1}});const s=this.add.text(a.width/2,a.height-200,`SCORE: ${t.score}`,{fontSize:"30px",fontFamily:"Arial Black"});s.setDepth(1),s.setOrigin(.5)}}const E=class{constructor(e,t,s){this.events=new Phaser.Events.EventEmitter,this.offsetY=-a.brick.size+5,this.width=30,this.height=6,this.scene=e,this.health=Math.ceil(s),this.maxHealth=this.health,this.parent=t,this._x=this.parent.x-this.width/2,this._y=this.parent.y-this.offsetY,this.bar=e.add.graphics(),this.bar.alpha=1,this.bar.x=this._x,this.bar.y=this._y,this.healthText=e.add.text(this._x+this.width/2,this._y,this.health.toString(),{fixedWidth:this.width,fontSize:"9px",color:"#3F3F3F",fontFamily:"Arial Black",stroke:"#fff",strokeThickness:3}),this.healthText.setAlpha(0).setDepth(1).setOrigin(.5).setAlign("center"),this.criticalText=e.add.text(this._x+this.width/2,0,"Critical",{fontSize:"11px",color:"#a31f1e",fontFamily:"Arial Black",stroke:"#FFF",strokeThickness:6,align:"center"}),this.criticalText.setScale(0).setVisible(!1).setDepth(10).setOrigin(.5),this.instantKillText=e.add.text(this._x+this.width/2,0,"Instant Kill",{fontSize:"11px",color:"#40285e",fontFamily:"Arial Black",stroke:"#FFF",strokeThickness:6,align:"center"}),this.instantKillText.setScale(0).setVisible(!1).setDepth(10).setOrigin(.5),this.parent.addToFollow(this.bar),this.parent.addToFollow(this.healthText),this.parent.addToFollow(this.criticalText)}update(){this.x=this.parent.x,this.y=this.parent.y,this.draw()}get x(){return this._x-this.width/2}set x(e){this._x=e}get y(){return this._y-this.offsetY}set y(e){this._y=e}isHealthLow(){return this.percentage*100<30}draw(){return this.criticalText.setAlpha(0),this.instantKillText.setAlpha(0),this.health?this.healthText.setAlpha(1).setText(this.health.toString()).setPosition(this.x+this.width/2,this.y+2):this.healthText.setVisible(!1),this.bar.clear().setPosition(0),this.bar.fillStyle(4144959).fillRect(this.x,this.y,this.width,this.height).setDepth(1).fillStyle(16777215).fillRect(this.x+1,this.y+1,this.width-2,this.height-2),this.isHealthLow()?this.bar.fillStyle(7546920):this.bar.fillStyle(16737380),this.bar.fillRect(this.x+1,this.y+1,(this.width-2)*this.percentage,this.height-2),this}get percentage(){return this.health/this.maxHealth}get level(){return this._level}set level(e){this._level=e}animateText(e){return e.setScale(0).setVisible(!0).setY(this.y+20),new Promise(t=>{this.scene.tweens.timeline({targets:e,ease:"Power3",tweens:[{y:this._y-5,scale:1,alpha:{from:0,to:1},duration:300},{alpha:{from:1,to:0},duration:100}],onComplete:()=>{t(this)}})})}decrease(e=1,t=!0){const s=Math.ceil(e);this.health>=s&&this.health-s>0?(this.health-=s,this.events.emit(E.EVENTS.DAMAGE,s)):(this.health=0,this.events.emit(E.EVENTS.DAMAGE,s),this.events.emit(E.EVENTS.DIED)),t&&this.draw()}damage(e=E.DAMAGE_TYPE.NORMAL){switch(e){case E.DAMAGE_TYPE.NORMAL:{this.decrease();break}case E.DAMAGE_TYPE.CRITICAL:{this.decrease(Math.max(this.health*a.ball.criticalHealthPercentage,1)),this.animateText(this.criticalText);break}case E.DAMAGE_TYPE.INSTANT_KILL:{this.decrease(this.health),this.animateText(this.instantKillText);break}}return this}kill(){return this.decrease(this.health),this}};let p=E;p.EVENTS={DIED:"died",DAMAGE:"damage"};p.DAMAGE_TYPE={NORMAL:"normal",CRITICAL:"critical",INSTANT_KILL:"instant_kill"};class ht{constructor(t,s,i,r=1){this.scene=t,this.value=r,this.text=this.scene.add.text(s,i,this.toString())}update(){this.text.text=this.toString()}toString(){return`LEVEL: ${this.value}`}getValue(){return this.value}setValue(t){this.value=Math.ceil(t)}increase(t){this.value+=Math.ceil(t),this.update()}}class lt{constructor(t,s,i,r=0){this.scene=t,this.value=r,this.text=this.scene.add.text(s,i,this.toString())}update(){this.text.text=this.toString()}toString(){return`SCORE: ${this.value}`}getValue(){return this.value}setValue(t){this.value=Math.ceil(t)}increase(t){this.value+=Math.ceil(t),this.update()}}class ct extends Phaser.Physics.Arcade.Group{constructor(t,s,i){super(t.physics.world,t,s,i)}get balls(){return this.getChildren()}add(t,s){return this.getTotalFree()===0?(console.warn("No more empty slots"),this):(super.add(t,s),this)}}const f={EXPLOSION:{scale:{start:1.5,end:.1},speed:70,alpha:{min:.05,max:.25},active:!1,lifespan:800,quantity:100,blendMode:Phaser.BlendModes.SCREEN},UP:{scale:{start:.8,end:.1},speed:15,alpha:{min:0,max:.1},active:!0,lifespan:800,quantity:2,blendMode:Phaser.BlendModes.SCREEN}},K=class{constructor(e,t){this.scene=e,this.emitters={},this.follow=t}create(e,t){var r,n;const s=K.EMITTERS[e],i=this.scene.add.particles(s.particle).createEmitter(s.config);i.startFollow(this.follow,(r=t==null?void 0:t.offset)==null?void 0:r.x,(n=t==null?void 0:t.offset)==null?void 0:n.y,t==null?void 0:t.trackVisible),this.emitters[e]=i}start(e){return e?(this.emitters[e].active=!0,this.emitters[e].visible=!0):Object.keys(this.emitters).forEach(t=>{this.emitters[t].active=!0,this.emitters[t].visible=!0}),this}stop(e){const t=s=>{this.emitters[s].visible=!1,setTimeout(()=>{this.emitters[s].active=!1},1e3)};return e?t(e):Object.keys(this.emitters).forEach(s=>t(s)),this}explode(e,t=20,s=0,i=0){return e?(this.start(e),this.emitters[e].explode(t,s,i)):Object.keys(this.emitters).forEach(r=>{this.start(r),this.emitters[r].explode(t,s,i)}),setTimeout(()=>{this.stop(e)},1e3),this}};let g=K;g.EMITTERS={NORMAL_BALL:{name:"NORMAL_BALL",particle:"particles",config:{radial:!1,frame:"white-50",lifespan:700,alpha:{end:0,start:.7},quantity:1,scale:{start:.7,end:0,ease:"Power3"},blendMode:Phaser.BlendModes.SCREEN}},HEART_UP:{name:"HEART_UP",particle:"particles",config:d(c({},f.UP),{gravityY:-50,frame:"heart",scale:{min:.1,max:.6},alpha:{end:0,start:.2},lifespan:1e3,quantity:1,speed:30,blendMode:Phaser.BlendModes.DIFFERENCE})},GREEN_UP:{name:"GREEN_UP",particle:"particles",config:d(c({},f.UP),{gravityY:-50})},EXPLOSION_GREEN:{name:"EXPLOSION_GREEN",particle:"particles",config:d(c({},f.EXPLOSION),{frame:"green",gravityY:200})},EXPLOSION_LIGHT_GREEN:{name:"EXPLOSION_LIGHT_GREEN",particle:"particles",config:d(c({},f.EXPLOSION),{frame:"light-green",gravityY:200})},EXPLOSION_HEART_UP:{name:"EXPLOSION_HEART_UP",particle:"particles",config:d(c({},f.EXPLOSION),{frame:"heart",gravityY:-10})},EXPLOSION_HEART_DOWN:{name:"EXPLOSION_HEART_DOWN",particle:"particles",config:d(c({},f.EXPLOSION),{frame:"heart",gravityY:200})},EXPLOSION_YELLOW:{name:"EXPLOSION_YELLOW",particle:"particles",config:d(c({},f.EXPLOSION),{frame:"yellow"})},EXPLOSION_GREY:{name:"EXPLOSION_GREY",particle:"particles",config:d(c({},f.EXPLOSION),{frame:"grey"})}};var _=(e=>(e[e.NORMAL=0]="NORMAL",e))(_||{});class dt extends Phaser.Physics.Arcade.Sprite{constructor(t,s,i,r="ball"){super(t,s,i,r),this.state=1,this.emitters=new g(t,this),this.on("addedtoscene",this.onCreate,this)}onCreate(){const{size:t}=a.ball;return this.displayWidth=t,this.displayHeight=t,this.enableCollision(!0),this.createEmitters(),this}createEmitters(){return this.emitters.create(g.EMITTERS.NORMAL_BALL.name),this.emitters.stop(),this}animate(t){var s;(s=this.scene)==null||s.tweens.add(c({targets:[this]},t))}enableCollision(t){this.body.onWorldBounds=t}afterMove(){this.state=1,this.hide()}move(t,s){return this.state!==1&&console.warn("The ball is not stopped to be moved"),this.state=2,this.scene.time.addEvent({delay:Phaser.Math.Between(0,300),callback:this.animate,callbackScope:this,args:[{alpha:1,scale:1,ease:a.ball.tweens.move.ease,duration:a.ball.tweens.move.duration,x:t!=null?t:this.x,y:s!=null?s:this.y,onComplete:this.afterMove,onCompleteScope:this}]}),this}start(t,s){this.show(),this.emitters.start(),this.state=0,this.setVelocity(t,s)}stop(){return super.stop(),this.emitters.stop(),this.state=1,this.setVelocity(0),this}destroy(t){t&&this.emitters.explode(20,0,0),super.destroy(!0)}hide(){this.visible=!1}show(){this.visible=!0}}class H extends dt{constructor(t,s,i){super(t,s,i),this.criticalRate=a.ball.criticalRate,this.instantKillRate=a.ball.instantKillRate}}const U=class{constructor(e){this.events=new Phaser.Events.EventEmitter,this.scene=e,this.firstBallToLand=void 0,this.ballsLanded=0,this.fireOrigin=void 0,this.createGroup(e),this.createText()}createCallback(){this.updateText(this.group.getLength())}removeCallback(){return this}updateText(e){if(e<2){this.hideText();return}this.showText(),this.totalBallsText.setText(`x${e}`)}createText(){this.totalBallsText=this.scene.add.text(-100,-100,"x1"),this.totalBallsText.setFontFamily("Arial Black").setOrigin(.5).setFontSize(12)}showText(){this.scene.tweens.add({targets:this.totalBallsText,alpha:1,duration:200,ease:"Linear"})}hideText(){this.scene.tweens.add({targets:this.totalBallsText,alpha:0,duration:200,ease:"Linear"})}restart(){this.group.destroy(!0),this.createGroup(this.scene),this.updateText(0)}add(e,t,s){switch(e){case _.NORMAL:{const i=new H(this.scene,t,s);return this.group.add(i,!0),i}default:throw new Error("Unknown block type")}}fire(e){const{speed:t,delayBetweenBalls:s}=a.ball,i=this.getFirstBall();this.firstBallToLand=void 0,this.ballsLanded=0,this.fireOrigin=new Phaser.Geom.Point(i.x,i.y),this.group.balls.forEach((r,n)=>{this.scene.time.addEvent({delay:s*n,callback:()=>{r.start(t*Math.cos(e),t*Math.sin(e)),this.updateText(this.group.getLength()-(n+1))}})})}collideWorldBottom(e){e.stop(),this.ballsLanded++,this.firstBallToLand||(this.firstBallToLand=e),e!=this.firstBallToLand&&this.moveToTheFirstBallPosition(e),this.ballsLanded===this.group.getLength()&&this.scene.time.addEvent({delay:a.ball.tweens.move.delay.max+a.ball.tweens.move.duration,callback:()=>this.emitBallsStopped(),callbackScope:this})}emitBallsStopped(){this.events.emit(U.EVENTS.BALLS_STOPPED),this.ballsLanded=0,this.totalBallsText.setPosition(this.getFirstBall().x,this.getFirstBall().y+a.ball.size+10),this.updateText(this.group.getLength())}moveToTheFirstBallPosition(e){const{x:t,y:s}=this.getFirstBall();return e.move(t,s-1),this}getFirstBall(){return this.firstBallToLand?this.firstBallToLand:this.group.balls[0]}createGroup(e){const t={createCallback:()=>{this.createCallback()},removeCallback:()=>{this.createCallback()}};return this.group=new ct(e,c({bounceX:1,bounceY:1,classType:H,collideWorldBounds:!0,maxSize:a.ball.max},t)),this}animateCollect(e,t,s,i){const r=this.scene.add.sprite(e,t,"ball");r.setDepth(10),r.setAlpha(0),r.setOrigin(.5),this.scene.tweens.timeline({targets:r,ease:"Cubic.easeInOut",tweens:[{y:"+=50",scale:1.5,alpha:1,duration:700,angle:360},{x:s,y:i,scale:.5,alpha:.1,duration:350}],onComplete:()=>{r.destroy(!0)}})}};let D=U;D.EVENTS={BALLS_STOPPED:"balls_stopped"};var h=(e=>(e[e.BRICK=0]="BRICK",e[e.SPECIAL_BALL=1]="SPECIAL_BALL",e[e.EXTRA_BALL=2]="EXTRA_BALL",e[e.EXTRA_LIFE=3]="EXTRA_LIFE",e))(h||{});const x=class extends Phaser.Physics.Arcade.Sprite{constructor(e,t){const{row:s,col:i,texture:r="monster-green",frame:n=void 0}=t;super(e,0,0,r,n),this.followPosition=[],this.fixPosition(s,i),this.on("addedtoscene",this.onCreate,this)}fixPosition(e,t){this.setOrigin(.5,0),this.row=l.isValidRow(e)?e:0,this.col=l.isValidCol(t)?t:0,this.x=w.getXByCol(this.col),this.y=w.getYByRow(this.row)}onCreate(){const{initialAlpha:e,initialDepth:t,initialScale:s}=a.brick;return this.setScale(s),this.setAlpha(e),this.setDepth(t),this.show(),this}animate(e,t=!1){var s;return(s=this.scene)==null||s.tweens.add(c({targets:[this,...this.followPosition],onUpdate:()=>{t||this.emit(x.EVENTS.MOVE)}},e)),this}addToFollow(e){this.followPosition.push(e)}async moveDown(e=1){return this.move(e>0?this.row+e:-1,void 0)}async moveUp(e=1){return this.move(e>0?this.row-e:0,void 0)}async moveLeft(e=1){return this.move(void 0,e>0&&this.col>0?this.col-e:0)}async moveRight(e=1){return this.move(void 0,e>0?this.col+e:-1)}async move(e,t){this.emit(x.EVENTS.MOVE_START);let s,i;e!==void 0&&!l.canMove(e)&&(s=e<0?l.lastRowIndex:Math.min(e,l.lastRowIndex)),t!==void 0&&!l.canMove(void 0,t)&&(i=t<0?l.lastColIndex:Math.min(t,l.lastColIndex)),s!==void 0?this.row=s:s=this.row+1,i!==void 0&&(this.col=i);const{tweens:r}=a.brick;return new Promise(n=>{const o={alpha:1,scale:1,ease:r.move.ease,duration:r.move.duration,x:w.getXByCol(i!=null?i:this.col),y:w.getYByRow(s!=null?s:this.row),onComplete:()=>{n(this),this.emit(x.EVENTS.MOVE_END),this.row===l.lastRowIndex&&this.emit(x.EVENTS.IN_LAST_ROW)},onCompleteContext:this};this.animate(o)})}canMove(e,t){if(!e&&!t)return!1;let s=!1;return e!==void 0&&(e<0||e+1>=l.lastRowIndex)&&(s=!0),t!==void 0&&(t<0||t+1>=l.lastColIndex)&&(s=!0),s}fall(){const{initialPositionY:e,tweens:t}=a.brick,s=this.y;return this.y=e,this.scene.time.addEvent({delay:Phaser.Math.Between(t.fall.delay.min,t.fall.delay.max),callback:this.animate,callbackScope:this,args:[{alpha:1,scale:1,ease:t.fall.ease,duration:t.fall.duration,y:s}]}),this}destroy(){this.followPosition.length&&this.followPosition.forEach(e=>{e&&e.destroy&&e.destroy()}),super.destroy(!0)}};let y=x;y.EVENTS={MOVE:"move",MOVE_START:"move_start",MOVE_END:"move_end",IN_LAST_ROW:"in_last_row"};class W extends y{constructor(t,s){super(t,d(c({},s),{frame:"monster/green/move-0"})),this.brickType=h.BRICK,this.health=new p(t,this,s.level||1),this.emitters=new g(t,this),this.createEmitters(),this.addListeners(),this.createAnimations(),this.lastAnimation="",this.play("blink")}play(t,s){return this.lastAnimation=t,super.play(t,s)}playAndRestore(t,s=500,i){return this.play(t,i),this.lastAnimation&&this.playAfterDelay(this.lastAnimation,s),this}show(){return this.fall()}attack(){const t={alpha:1,scale:1,ease:"Power3",duration:600,y:a.height+a.brick.size,onComplete:()=>{this.destroy()},onCompleteContext:this};return this.animate(t,!0),this}createEmitters(){return this.emitters.create(g.EMITTERS.EXPLOSION_GREY.name),this}addListeners(){return this.health.events.on(p.EVENTS.DAMAGE,t=>{this.play("pain"),this.emit(p.EVENTS.DAMAGE,t),this.row===l.lastRowIndex?this.playAfterDelay("angry",500):this.health.isHealthLow()?this.playAfterDelay("tired",500):this.playAfterDelay("blink",500)}),this.health.events.on(p.EVENTS.DIED,()=>{this.body.enable=!1,this.setAlpha(.95),this.play("die",!0),setTimeout(()=>{this.emitters.explode(),this.destroy()},600)}),this.on(y.EVENTS.MOVE,()=>{this.health.update()}),this.on(y.EVENTS.MOVE_START,()=>{this.play("move")}),this.on(y.EVENTS.MOVE_END,()=>{this.stop(),this.health.isHealthLow()?this.playAfterDelay("tired",500):this.playAfterDelay("blink",500)}),this.on(y.EVENTS.IN_LAST_ROW,()=>{this.play("angry")}),this}createAnimations(){this.anims.create({key:"blink",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:4,prefix:"monster/green/blink-"}),frameRate:10,repeat:-1,repeatDelay:Phaser.Math.Between(3e3,5e3)}),this.anims.create({key:"move",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:5,prefix:"monster/green/move-"}),frameRate:10,repeat:-1}),this.anims.create({key:"die",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:4,prefix:"monster/green/die-"}),frameRate:20,repeat:0}),this.anims.create({key:"pain",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:3,prefix:"monster/green/pain-"}),frameRate:20,repeat:0}),this.anims.create({key:"angry",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:6,prefix:"monster/green/angry-"}),frameRate:15,repeat:-1,repeatDelay:Phaser.Math.Between(200,500)}),this.anims.create({key:"tired",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:4,prefix:"monster/green/tired-"}),frameRate:7,repeat:-1,repeatDelay:300})}}class T extends Phaser.Physics.Arcade.Group{constructor(t,s,i){super(t.physics.world,t,s,i)}get bricks(){return this.getChildren()}add(t,s){if(this.getTotalFree()===0){const i=h[t.brickType];return console.warn(`No more empty slots - ${i}`),this}return super.add(t,s),this}getBlocksBounds(){const t=[];return this.bricks.forEach(s=>{t.push(s.getBounds())}),t}getCollidableLines(){const t=[];return this.bricks.forEach(s=>{const i=s.getBounds();t.push(i.getLineB()),t.push(i.getLineC()),t.push(i.getLineD())}),t}}class ut extends y{constructor(t,s){super(t,d(c({},s),{texture:"life"})),this.brickType=h.EXTRA_LIFE,this.emitters=new g(t,this),this.createEmitters(),this.createAnimations()}show(){return this.play("rotate"),this.fall()}createEmitters(){return this.emitters.create(g.EMITTERS.EXPLOSION_HEART_UP.name),this.emitters.create(g.EMITTERS.HEART_UP.name,{offset:{y:25}}),this}createAnimations(){this.anims.create({key:"rotate",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:5,prefix:"life/rotate-"}),frameRate:10,repeat:-1})}destroy(){this.emitters.explode(),super.destroy()}}const b=class{constructor(e){this.events=new Phaser.Events.EventEmitter,this.scene=e,this.create(),this.setCollisionHandler()}create(){var V;this.scene.add.sprite(0,0,"background").setOrigin(0);const t=this.scene.add.rectangle(a.world.left,a.world.top,a.world.width,a.world.height,16777215);t.setOrigin(0),t.setBlendMode(Phaser.BlendModes.MULTIPLY),t.setDisplaySize(a.world.width,a.world.height-a.brick.size);const s=t.getBounds(),{x:i,y:r,width:n,height:o}=s;if(this.scene.physics.world.setBounds(i,r,n,o+o/a.rows,!0,!0,!0,!0),this.bounds=s,this.scene.physics.world.setBoundsCollision(!0,!0,!0,!0),!((V=this.scene.game.config.physics.arcade)!=null&&V.debug))return;this.createWorldTiles();const u=this.scene.add.graphics(),m=this.scene.physics.world.bounds,C=1,$=Phaser.Display.Color.HexStringToColor("000").color,q=.8;u.lineStyle(C,$,q),u.strokeRect(m.x,m.y,m.width,m.height)}setCollisionHandler(){this.scene.physics.world.on("worldbounds",this.handleCollision,this)}static get origin(){const e=(a.width-a.world.width)/2,t=(a.height-a.world.height)/2;return new Phaser.Geom.Point(e,t)}static get lastRowIndex(){return a.rows-1}static get lastColIndex(){return a.cols-1}static isValidRow(e){return e>=0&&e<=b.lastRowIndex}static isValidCol(e){return e>=0&&e<=b.lastColIndex}static canMove(e,t){if(!e&&!t)return!1;let s=!1;return e!==void 0&&b.isValidRow(e)?s=!0:s=!1,t!==void 0&&b.isValidCol(t)?s=!0:s=!1,s}getStartPosition(){return new Phaser.Geom.Point(this.getBounds().centerX,this.getBoundsBottom()-a.ball.radius)}getBounds(){return this.bounds}getBoundsBottom(){return this.bounds.bottom+a.brick.size}getCollidableLines(){const e=[];return e.push(this.bounds.getLineA()),e.push(this.bounds.getLineB()),e.push(this.bounds.getLineD()),e}getSides(){return{top:this.bounds.getLineA(),right:this.bounds.getLineB(),bottom:this.bounds.getLineC(),left:this.bounds.getLineD()}}createWorldTiles(){let e=!1;for(let t=0;t<a.cols;t++){e=!e;const s=a.brick.size;for(let i=0;i<a.rows;i++){const[r,n]=[this.bounds.left+t*s,this.bounds.top+i*s],o=this.scene.add.sprite(r,n,"ground_tile").setOrigin(0,0).setTint(15728640).setAlpha(e?.3:.5);o.displayWidth=s,o.displayHeight=s,e=!e}}}handleCollision(e,t,s){!s||this.events.emit(b.EVENTS.BALL_COLLIDED,e)}};let l=b;l.EVENTS={BALL_COLLIDED:"ball_collided"};const P=class{constructor(e,t){this.events=new Phaser.Events.EventEmitter,this.scene=e,this.balls=t,this.createGroups(e),this.setCollisionHandler()}restart(){this.getChildren().forEach(e=>e.destroy())}setCollisionHandler(){const e=[this.groups[h.EXTRA_BALL],this.groups[h.SPECIAL_BALL],this.groups[h.EXTRA_LIFE]],t=this.groups[h.BRICK];return this.scene.physics.overlap(this.balls.group,e,(s,i)=>{i.destroy(!0),this.events.emit(P.EVENTS.COLLECTED,i)}),this.scene.physics.collide(this.balls.group,t,(s,i)=>{const r=i,n=s,o=Phaser.Math.FloatBetween(0,100)<n.criticalRate,u=Phaser.Math.FloatBetween(0,100)<n.instantKillRate;if(o)return r.health.damage(p.DAMAGE_TYPE.CRITICAL),this;if(u)return r.health.damage(p.DAMAGE_TYPE.INSTANT_KILL),this;r.health.damage()}),this}destroyRow(e){const t=this.getChildren().filter(i=>i.row===e);let s=0;return t.forEach(i=>{switch(i.brickType){case h.EXTRA_BALL:case h.EXTRA_LIFE:case h.SPECIAL_BALL:this.events.emit(P.EVENTS.COLLECTED,i),i.destroy();break;case h.BRICK:{i.attack(),s++;break}}}),s}createCallback(e){return e.on(p.EVENTS.DAMAGE,t=>{this.events.emit(p.EVENTS.DAMAGE,t)}),e}removeCallback(e){e.off(p.EVENTS.DAMAGE)}getCollidableLines(){const e=[];return e.push(...this.groups[h.BRICK].getCollidableLines()),e}getChildrenByType(e){return this.groups[e].bricks}getChildren(){let e=[];for(const t of this.getBlockTypes())e=[...e,...this.getChildrenByType(t)];return e}async move(){const e=this.getChildren(),t=e.filter(i=>i.row===l.lastRowIndex),s=e.filter(i=>i.row<l.lastRowIndex);return t.length&&this.events.emit(P.EVENTS.COLLIDED_WORLD_DOWN),Promise.all(s.map(i=>i.moveDown())).then(()=>this)}async createRandom(e){const t=Phaser.Math.Between(1,a.brick.maxPerRow),s=Phaser.Math.Between(0,100)<a.brick.dropProbability.extra,i=Phaser.Math.Between(0,100)<a.brick.dropProbability.special,r=Phaser.Math.Between(0,100)<a.brick.dropProbability.life,n=[];this.balls.group.getTotalFree()&&(s&&n.push(this.add(h.EXTRA_BALL)),i&&n.push(this.add(h.SPECIAL_BALL))),r&&n.push(this.add(h.EXTRA_LIFE));for(let o=0;o<t;o++)n.push(this.add(h.BRICK,e));return Promise.all(n).then(()=>this)}async add(e,t){switch(e){case h.BRICK:{const{min:r,max:n}=a.brick.dropOnRows.normal,{row:o,col:u}=this.getRandomFreeSlot(r,n);if(o===-1)return new Promise(C=>C(this));const m=new W(this.scene,{row:o,col:u,level:t?Math.pow(t,a.brick.levelIncrement):1});this.groups[h.BRICK].add(m,!0);break}case h.SPECIAL_BALL:{const{min:r,max:n}=a.brick.dropOnRows.special,{row:o,col:u}=this.getRandomFreeSlot(r,n);if(o===-1)return new Promise(m=>m(this));this.groups[h.SPECIAL_BALL].add(new Y(this.scene,{row:o,col:u}),!0);break}case h.EXTRA_BALL:{const{min:r,max:n}=a.brick.dropOnRows.extra,{row:o,col:u}=this.getRandomFreeSlot(r,n);if(o===-1)return new Promise(m=>m(this));this.groups[h.EXTRA_BALL].add(new I(this.scene,{row:o,col:u}),!0);break}case h.EXTRA_LIFE:{const{min:r,max:n}=a.brick.dropOnRows.life,{row:o,col:u}=this.getRandomFreeSlot(r,n);if(o===-1)return new Promise(m=>m(this));this.groups[h.EXTRA_LIFE].add(new ut(this.scene,{row:o,col:u}),!0);break}default:console.warn("Unknown block type ");break}const{delay:s,duration:i}=a.brick.tweens.fall;return new Promise(r=>{setTimeout(()=>{r(this)},s.max+i)})}createGroups(e){const t={createCallback:o=>{this.createCallback(o)},removeCallback:o=>{this.removeCallback(o)}},s=new T(e,c({immovable:!0,classType:W,maxSize:a.brick.max.normal},t)),i=new T(e,c({immovable:!0,classType:Y,maxSize:a.brick.max.special},t)),r=new T(e,c({immovable:!0,classType:I,maxSize:a.brick.max.extra},t)),n=new T(e,c({immovable:!0,classType:I,maxSize:a.brick.max.life},t));return this.groups={[h.BRICK]:s,[h.SPECIAL_BALL]:i,[h.EXTRA_BALL]:r,[h.EXTRA_LIFE]:n},this}createSlots(){const{rows:e,cols:t}=a,s=[];for(let i=0;i<e;i++){s[i]=[];for(let r=0;r<t;r++)s[i][r]=!1}return s}getSlots(){const e=this.createSlots();for(const t of this.getBlockTypes()){const s=t;this.groups[s].bricks.forEach(i=>{e[i.row][i.col]=!0})}return e}isSlotEmpty(e,t,s){return s[e]&&s[e][t]===!1}getBlockTypes(){return Object.values(h).filter(e=>!isNaN(Number(e))).map(e=>Number(e))}getAvailableSlots(e=0,t=-1){e<0&&(e=0),t<0&&(t=l.lastRowIndex),e=Math.min(e,l.lastRowIndex),t=Math.min(t,l.lastRowIndex);const s=[],i=this.getSlots();for(let r=e;r<=t;r++)if(!(i[r].filter(o=>o).length>=a.brick.maxPerRow))for(let o=0;o<i[r].length;o++)this.isSlotEmpty(r,o,i)&&s.push({row:r,col:o});return s}getRandomFreeSlot(e=0,t=-1){const s=this.getAvailableSlots(e,t);if(!s.length)return{row:-1,col:-1};const i=Phaser.Math.Between(0,s.length-1);return s[i]}};let v=P;v.EVENTS={COLLIDED_WORLD_DOWN:"collided_world_down",COLLECTED:"collected"};class w{static getYByRow(t){return l.origin.y+a.marginTop+t*a.brick.size+a.brick.size*.5}static getXByCol(t){return l.origin.x+t*a.brick.size+a.brick.size*.5}static getPositionByRowCol(t,s){return new Phaser.Geom.Point(w.getYByRow(t),w.getXByCol(s))}}const M=class{constructor(e,t){this.events=new Phaser.Events.EventEmitter,this.state=1,this.active=!1,this.scene=e,this.world=t,this.create()}setActive(e){return this.active=e===void 0?!this.active:e,this.active||(this.state=1),this}setPosition(e){return this.x=e,this.arrowBallSprite.x=e,this.trajectoryRectangle.x=e,this}getPosition(){return{x:this.x,y:this.y}}setCollidableLines(e){return this.collidableLines=e,this}create(){this.events.emit(M.EVENTS.CREATED),this.moveToInitialPosition(),this.addEventListeners(),this.createGraphics(),this.createCollisionPointSprite(),this.createArrowBallSprite(),this.createTrajectoryRectangle()}moveToInitialPosition(){const e=this.world.getBounds().centerX,t=this.world.getBoundsBottom()-a.ball.radius;this.x=e,this.y=t}createTrajectoryRectangle(){this.trajectoryRectangle=this.scene.add.rectangle(this.x,this.y,a.ball.size+2,a.height,16777215,.05),this.trajectoryRectangle.setOrigin(.5,1),this.trajectoryRectangle.visible=!1,this.trajectoryRectangle.setBlendMode(Phaser.BlendModes.ADD);const e=this.scene.add.graphics();e.alpha=0,e.beginPath();const{bounds:t}=this.world;e.fillRect(t.left,t.top,t.width,this.world.getBoundsBottom()),this.trajectoryRectangle.setMask(e.createGeometryMask())}createGraphics(){this.graphics=this.scene.add.graphics()}addEventListeners(){this.scene.input.on("pointerup",this.mouseUp,this),this.scene.input.on("pointerdown",this.mouseDown,this),this.scene.input.on("pointermove",this.mouseMove,this)}mouseUp(){if(this.clearTrajectory(),!this.direction||this.state!==0){this.state=1;return}this.state=1,this.events.emit(M.EVENTS.FIRE,this.direction)}mouseDown(){!this.active||this.state!==1||(this.state=0)}mouseMove(e){if(this.state!==0)return;if(this.clearTrajectory(),!this.canAdjustAim(e)){this.state=1,this.clearTrajectory();return}const{trajectoryDistance:t}=a,s=e.worldX,i=e.worldY;this.angle=Phaser.Math.Angle.Between(this.x,this.y,e.worldX,e.worldY),this.direction=Phaser.Math.Angle.Wrap(this.angle);const r=(s+t)*Math.cos(this.angle),n=(i+t)*Math.sin(this.angle);if(this.trajectoryLine=new Phaser.Geom.Line(this.x,this.y,r,n),this.checkDummyArea(),e.y>this.world.getBoundsBottom()){this.state=1,this.clearTrajectory();return}this.fixDirection(),this.checkBlocksCollisions(),this.showCollisionPoint(),this.showArrowBall(),this.showTrajectory()}getDirectionRotated(){return this.direction+Math.PI/2}checkBlocksCollisions(){const e=this.getLinesFromVertices(),t={distance:Number.MAX_SAFE_INTEGER,point:new Phaser.Geom.Point(-1,-1),vertex:void 0};if(this.collisionPoint=new Phaser.Geom.Point(-100,-100),e.forEach(s=>{this.collidableLines.forEach(i=>{const r=new Phaser.Geom.Point(-1,-1);if(Phaser.Geom.Intersects.LineToLine(i,s.line,r),r.x!==-1){const n=new Phaser.Geom.Point(s.line.x1,s.line.y1),o=Phaser.Math.Distance.BetweenPoints(n,r);o>0&&o<t.distance&&(t.point=r,t.distance=o,t.vertex=s.pos)}})}),t.vertex){const{radius:s}=a.ball;switch(t.vertex){case"top_left":this.trajectoryLine.x2=t.point.x+s,this.trajectoryLine.y2=t.point.y+s;break;case"top_right":this.trajectoryLine.x2=t.point.x-s,this.trajectoryLine.y2=t.point.y+s;break;case"bottom_right":this.trajectoryLine.x2=t.point.x-s,this.trajectoryLine.y2=t.point.y-s;break;case"bottom_left":this.trajectoryLine.x2=t.point.x+s,this.trajectoryLine.y2=t.point.y-s;break}const i=Phaser.Geom.Line.BresenhamPoints(this.trajectoryLine,2);if(i.length){const r=i[i.length-1];this.collisionPoint=new Phaser.Geom.Point(r.x,r.y),this.trajectoryLine.x2=r.x||0,this.trajectoryLine.y2=r.y||0}}}canAdjustAim(e){return this.scene.input.activePointer.leftButtonDown()&&e.y<this.world.getBoundsBottom()}createCollisionPointSprite(){this.collisionPointSprite=this.scene.add.sprite(-50,-50,"collision"),this.collisionPointSprite.visible=!1,this.collisionPointSprite.setDepth(1e3),this.scene.physics.add.existing(this.collisionPointSprite),this.scene.tweens.add({targets:this.collisionPointSprite,props:{angle:{value:"+=360"}},duration:2e3,repeat:-1,ease:"Linear"})}createArrowBallSprite(){this.arrowBallSprite=this.scene.add.sprite(this.x,this.y-a.ball.size,"arrow_ball"),this.arrowBallSprite.visible=!1,this.arrowBallSprite.setOrigin(.5,1),this.scene.tweens.add({targets:this.arrowBallSprite,duration:600,alpha:{from:.3,to:.7},scale:{from:.9,to:1.1},onUpdate:()=>{this.arrowBallSprite.rotation=this.getDirectionRotated()},yoyo:!0,repeat:-1,ease:"Power1"})}showCollisionPoint(){!this.collisionPoint||this.collisionPoint.x<0||(this.collisionPointSprite.visible=!0,this.collisionPointSprite.x=this.collisionPoint.x,this.collisionPointSprite.y=this.collisionPoint.y)}showArrowBall(){const e=Math.cos(this.direction),t=Math.sin(this.direction),s=this.trajectoryLine.x1+e*a.ball.size,i=this.trajectoryLine.y1+t*a.ball.size;this.arrowBallSprite.visible=!0,this.arrowBallSprite.rotation=this.getDirectionRotated(),this.arrowBallSprite.x=s,this.arrowBallSprite.y=i}fixDirection(){this.angle=Phaser.Math.Angle.Between(this.x,this.y,this.trajectoryLine.x2,this.trajectoryLine.y2),this.direction=Phaser.Math.Angle.Wrap(this.angle)}checkDummyArea(){const e=this.world.getBounds();if(Phaser.Geom.Intersects.LineToLine(this.trajectoryLine,this.getDummyLeftLine())){this.trajectoryLine.x2=e.x,this.trajectoryLine.y2=e.y+e.height;return}if(Phaser.Geom.Intersects.LineToLine(this.trajectoryLine,this.getDummyRightLine())){this.trajectoryLine.x2=e.x+e.width,this.trajectoryLine.y2=e.y+e.height;return}}getDummyRightLine(){return new Phaser.Geom.Line(this.world.getBounds().x+this.world.getBounds().width,this.world.getBounds().y+this.world.getBounds().height,this.world.getBounds().x+this.world.getBounds().width,this.world.getBoundsBottom()+4)}getDummyLeftLine(){return new Phaser.Geom.Line(this.world.getBounds().x,this.world.getBounds().y+this.world.getBounds().height,this.world.getBounds().x,this.world.getBoundsBottom()+4)}getVertices(){const e=a.ball.radius-1;return{top_left:new Phaser.Geom.Point(this.x-e,this.y-e),top_right:new Phaser.Geom.Point(this.x+e,this.y-e),bottom_left:new Phaser.Geom.Point(this.x-e,this.y+e),bottom_right:new Phaser.Geom.Point(this.x+e,this.y+e)}}getLinesFromVertices(){const{radius:e}=a.ball,t=this.getVertices();return[{pos:"top_left",line:new Phaser.Geom.Line(t.top_left.x,t.top_left.y,this.trajectoryLine.x2-e,this.trajectoryLine.y2-e)},{pos:"top_right",line:new Phaser.Geom.Line(t.top_right.x,t.top_right.y,this.trajectoryLine.x2+e,this.trajectoryLine.y2-e)},{pos:"bottom_left",line:new Phaser.Geom.Line(t.bottom_left.x,t.bottom_left.y,this.trajectoryLine.x2-e,this.trajectoryLine.y2+e)},{pos:"bottom_right",line:new Phaser.Geom.Line(t.bottom_right.x,t.bottom_right.y,this.trajectoryLine.x2+e,this.trajectoryLine.y2+e)}]}showTrajectory(){var e;this.trajectoryRectangle.visible=!0,this.trajectoryRectangle.rotation=this.getDirectionRotated(),(e=this.scene.game.config.physics.arcade)!=null&&e.debug&&(this.graphics.lineStyle(1,65280).fillStyle(16716049).setDepth(100),this.graphics.lineBetween(this.trajectoryLine.x1,this.trajectoryLine.y1,this.trajectoryLine.x2,this.trajectoryLine.y2),this.getLinesFromVertices().forEach(t=>{const{x1:s,y1:i,x2:r,y2:n}=t.line;this.graphics.lineBetween(s,i,r,n)}))}clearTrajectory(){this.collisionPointSprite.visible=!1,this.arrowBallSprite.visible=!1,this.trajectoryRectangle.visible=!1,this.graphics.clear()}};let G=M;G.EVENTS={FIRE:"fire",CREATED:"created"};class mt{constructor(t,s,i,r=!0){this.scene=t,this.x=s,this.y=i,this.state=r,this.sprite=this.scene.add.sprite(this.x,this.y,"heart")}setState(t){this.state=t,t?this.sprite.setFrame("heart_filled"):this.sprite.setFrame("heart_outlined")}}const A=class{constructor(e,t,s,i=a.lives){this.lifeWidth=20,this.lives=[],this.events=new Phaser.Events.EventEmitter,this.scene=e,this.x=t,this.y=s,this.max=i,this.current=i;for(let r=0;r<i;r++)this.lives.push(new mt(e,this.x+70+this.lifeWidth*r,this.y-2+this.lifeWidth/2));this.livesText=this.scene.add.text(this.x,this.y,"LIVES: "),this.update()}update(){this.lives.forEach((e,t)=>{t<this.current?e.setState(!0):e.setState(!1)})}decrease(e=1){const t=this.current;return this.current>0&&(this.current=Math.max(0,this.current-e)),t!==this.current?(this.events.emit(A.EVENTS.DECREASE,this.current),this.flashScene(e)):this.events.emit(A.EVENTS.DECREASE,this.current),this.update(),this.current>0}increase(e){const t=this.current;return this.current++,this.current=Math.min(this.current,this.max),t!==this.current&&this.events.emit(A.EVENTS.INCREASE),e&&this.update(),this.current}restart(){this.current=this.max;for(let e=0;e<this.current;e++)this.lives[e].setState(!0)}getFirstEmpty(){return this.lives.find(e=>!e.state)}animateCollect(e,t){const s=this.current;if(this.increase(!1),s!==this.current){const i=this.scene.add.sprite(e,t,"heart"),r=this.getFirstEmpty();i.setDepth(10),i.setAlpha(0),this.scene.tweens.timeline({targets:i,ease:"Cubic.easeInOut",tweens:[{y:"+=50",scale:1.5,alpha:1,duration:700,angle:360},{x:(r==null?void 0:r.x)||this.x,y:(r==null?void 0:r.y)||this.y,scale:1,duration:350}],onComplete:()=>{i.destroy(!0),this.update()}})}}flashScene(e=1){const t=this.scene.add.rectangle(0,0,a.width,a.height,16711680);t.setBlendMode(Phaser.BlendModes.ADD),t.setOrigin(0),t.setDepth(1),t.setAlpha(0),this.scene.tweens.add({targets:t,duration:150,ease:"Linear",alpha:{from:0,to:1},yoyo:1,repeat:Math.max(0,e-1),repeatDelay:Phaser.Math.Between(10,50),onComplete:()=>{t.destroy(!0)}})}};let B=A;B.EVENTS={INCREASE:"increase",DECREASE:"decrease"};class I extends y{constructor(t,s){super(t,d(c({},s),{texture:"extra-ball"})),this.brickType=h.EXTRA_BALL,this.emitters=new g(t,this),this.createEmitters(),this.createAnimations()}show(){return this.play("float"),this.fall()}createEmitters(){return this.emitters.create(g.EMITTERS.EXPLOSION_LIGHT_GREEN.name),this}createAnimations(){this.anims.create({key:"float",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:4,prefix:"extra-ball/float-"}),yoyo:!0,frameRate:10,repeat:-1,repeatDelay:4e3})}destroy(){this.emitters.explode(),super.destroy()}}class Y extends y{constructor(t,s){super(t,d(c({},s),{texture:"special-brick"})),this.brickType=h.SPECIAL_BALL,this.emitters=new g(t,this),this.createEmitters(),this.createAnimations()}show(){return this.play("float"),this.fall()}createEmitters(){return this.emitters.create(g.EMITTERS.EXPLOSION_YELLOW.name),this}createAnimations(){this.anims.create({key:"float",frames:this.scene.anims.generateFrameNames(this.texture.key,{start:0,end:4,prefix:"special-brick/float-"}),yoyo:!0,frameRate:10,repeat:-1,repeatDelay:4e3})}destroy(){this.emitters.explode(),super.destroy()}}class pt extends Phaser.Scene{constructor(){super({key:"GameScene",active:!1})}async create(){this.state=0,this.world=new l(this),this.trajectory=new G(this,this.world),this.balls=new D(this),this.bricks=new v(this,this.balls);const t=this.world.getBounds().left;this.score=new lt(this,t,5),this.level=new ht(this,t,23),this.lives=new B(this,t,40),this.collected=[],this.addBalls(),this.trajectory.setCollidableLines(this.world.getCollidableLines()),this.trajectory.setActive(!0),this.bricks.createRandom(this.level.getValue()),this.addEventListeners()}update(){switch(this.state){case 1:{this.bricks.setCollisionHandler(),this.trajectory.setActive(!1);break}case 0:{this.trajectory.setCollidableLines([...this.world.getCollidableLines(),...this.bricks.getCollidableLines()]),this.trajectory.setActive(!0);break}case 3:{this.nextRound();break}}}addBalls(){const t=this.world.getStartPosition();for(let s=0;s<a.ball.startBalls;s++)this.balls.add(_.NORMAL,t.x,t.y);return this}fireBalls(t){return this.state=1,this.balls.fire(t),this}async nextRound(){this.state=2;const t=this.balls.getFirstBall();return this.trajectory.setPosition(t.x),this.level.increase(1),await this.bricks.move().then(()=>{if(this.state===4)return!0})?this:(await this.bricks.createRandom(this.level.getValue()),this.collected.forEach(i=>{switch(i.brickType){case h.SPECIAL_BALL:case h.EXTRA_BALL:{this.balls.add(_.NORMAL,t.x,t.y-1).hide();break}}}),this.collected=[],this.state=0,this)}addEventListeners(){return this.trajectory.events.on(G.EVENTS.FIRE,this.fireBalls,this),this.world.events.on(l.EVENTS.BALL_COLLIDED,t=>{this.balls.collideWorldBottom(t.gameObject)}),this.balls.events.on(D.EVENTS.BALLS_STOPPED,()=>{this.state=3}),this.bricks.events.on(v.EVENTS.COLLIDED_WORLD_DOWN,()=>{const t=this.bricks.destroyRow(l.lastRowIndex);this.lives.decrease(t)}),this.bricks.events.on(v.EVENTS.COLLECTED,t=>{switch(t.brickType){case h.EXTRA_LIFE:this.lives.animateCollect(t.x,t.y-t.width/2);break;case h.EXTRA_BALL:{const{x:s,y:i}=this.trajectory.getPosition();this.balls.animateCollect(t.x,t.y-t.width/2,s,i);break}}this.collected.push(t)}),this.bricks.events.on(p.EVENTS.DAMAGE,t=>{this.score.increase(t*100)}),this.lives.events.on(B.EVENTS.INCREASE,()=>{console.log("lives increased")}),this.lives.events.on(B.EVENTS.DECREASE,t=>{t===0&&(this.state=4,setTimeout(()=>{this.scene.launch("GameOverScene",{score:this.score.getValue()})},500))}),this}}new Phaser.Game(Object.assign(rt,{scene:[nt,at,pt,ot]}));
